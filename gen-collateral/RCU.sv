// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

module RCU(
  input         clock,
                reset,
                io_wb_valid,
                io_l2miss,
  input  [63:0] io_rf_in_0,
                io_rf_in_1,
                io_rf_in_2,
                io_rf_in_3,
                io_rf_in_4,
                io_rf_in_5,
                io_rf_in_6,
                io_rf_in_7,
                io_rf_in_8,
                io_rf_in_9,
                io_rf_in_10,
                io_rf_in_11,
                io_rf_in_12,
                io_rf_in_13,
                io_rf_in_14,
                io_rf_in_15,
                io_rf_in_16,
                io_rf_in_17,
                io_rf_in_18,
                io_rf_in_19,
                io_rf_in_20,
                io_rf_in_21,
                io_rf_in_22,
                io_rf_in_23,
                io_rf_in_24,
                io_rf_in_25,
                io_rf_in_26,
                io_rf_in_27,
                io_rf_in_28,
                io_rf_in_29,
                io_rf_in_30,
  input  [39:0] io_ipc,
  output [63:0] io_rf_out_0,
                io_rf_out_1,
                io_rf_out_2,
                io_rf_out_3,
                io_rf_out_4,
                io_rf_out_5,
                io_rf_out_6,
                io_rf_out_7,
                io_rf_out_8,
                io_rf_out_9,
                io_rf_out_10,
                io_rf_out_11,
                io_rf_out_12,
                io_rf_out_13,
                io_rf_out_14,
                io_rf_out_15,
                io_rf_out_16,
                io_rf_out_17,
                io_rf_out_18,
                io_rf_out_19,
                io_rf_out_20,
                io_rf_out_21,
                io_rf_out_22,
                io_rf_out_23,
                io_rf_out_24,
                io_rf_out_25,
                io_rf_out_26,
                io_rf_out_27,
                io_rf_out_28,
                io_rf_out_29,
                io_rf_out_30,
  output        io_runahead_backflag,
                io_runahead_trig
);

  reg [63:0] rf_reg_0;	// @[RCU.scala:50:23]
  reg [63:0] rf_reg_1;	// @[RCU.scala:50:23]
  reg [63:0] rf_reg_2;	// @[RCU.scala:50:23]
  reg [63:0] rf_reg_3;	// @[RCU.scala:50:23]
  reg [63:0] rf_reg_4;	// @[RCU.scala:50:23]
  reg [63:0] rf_reg_5;	// @[RCU.scala:50:23]
  reg [63:0] rf_reg_6;	// @[RCU.scala:50:23]
  reg [63:0] rf_reg_7;	// @[RCU.scala:50:23]
  reg [63:0] rf_reg_8;	// @[RCU.scala:50:23]
  reg [63:0] rf_reg_9;	// @[RCU.scala:50:23]
  reg [63:0] rf_reg_10;	// @[RCU.scala:50:23]
  reg [63:0] rf_reg_11;	// @[RCU.scala:50:23]
  reg [63:0] rf_reg_12;	// @[RCU.scala:50:23]
  reg [63:0] rf_reg_13;	// @[RCU.scala:50:23]
  reg [63:0] rf_reg_14;	// @[RCU.scala:50:23]
  reg [63:0] rf_reg_15;	// @[RCU.scala:50:23]
  reg [63:0] rf_reg_16;	// @[RCU.scala:50:23]
  reg [63:0] rf_reg_17;	// @[RCU.scala:50:23]
  reg [63:0] rf_reg_18;	// @[RCU.scala:50:23]
  reg [63:0] rf_reg_19;	// @[RCU.scala:50:23]
  reg [63:0] rf_reg_20;	// @[RCU.scala:50:23]
  reg [63:0] rf_reg_21;	// @[RCU.scala:50:23]
  reg [63:0] rf_reg_22;	// @[RCU.scala:50:23]
  reg [63:0] rf_reg_23;	// @[RCU.scala:50:23]
  reg [63:0] rf_reg_24;	// @[RCU.scala:50:23]
  reg [63:0] rf_reg_25;	// @[RCU.scala:50:23]
  reg [63:0] rf_reg_26;	// @[RCU.scala:50:23]
  reg [63:0] rf_reg_27;	// @[RCU.scala:50:23]
  reg [63:0] rf_reg_28;	// @[RCU.scala:50:23]
  reg [63:0] rf_reg_29;	// @[RCU.scala:50:23]
  reg [63:0] rf_reg_30;	// @[RCU.scala:50:23]
  always @(posedge clock) begin
    if (reset) begin
      rf_reg_0 <= 64'h0;	// @[RCU.scala:50:{23,31}]
      rf_reg_1 <= 64'h0;	// @[RCU.scala:50:{23,31}]
      rf_reg_2 <= 64'h0;	// @[RCU.scala:50:{23,31}]
      rf_reg_3 <= 64'h0;	// @[RCU.scala:50:{23,31}]
      rf_reg_4 <= 64'h0;	// @[RCU.scala:50:{23,31}]
      rf_reg_5 <= 64'h0;	// @[RCU.scala:50:{23,31}]
      rf_reg_6 <= 64'h0;	// @[RCU.scala:50:{23,31}]
      rf_reg_7 <= 64'h0;	// @[RCU.scala:50:{23,31}]
      rf_reg_8 <= 64'h0;	// @[RCU.scala:50:{23,31}]
      rf_reg_9 <= 64'h0;	// @[RCU.scala:50:{23,31}]
      rf_reg_10 <= 64'h0;	// @[RCU.scala:50:{23,31}]
      rf_reg_11 <= 64'h0;	// @[RCU.scala:50:{23,31}]
      rf_reg_12 <= 64'h0;	// @[RCU.scala:50:{23,31}]
      rf_reg_13 <= 64'h0;	// @[RCU.scala:50:{23,31}]
      rf_reg_14 <= 64'h0;	// @[RCU.scala:50:{23,31}]
      rf_reg_15 <= 64'h0;	// @[RCU.scala:50:{23,31}]
      rf_reg_16 <= 64'h0;	// @[RCU.scala:50:{23,31}]
      rf_reg_17 <= 64'h0;	// @[RCU.scala:50:{23,31}]
      rf_reg_18 <= 64'h0;	// @[RCU.scala:50:{23,31}]
      rf_reg_19 <= 64'h0;	// @[RCU.scala:50:{23,31}]
      rf_reg_20 <= 64'h0;	// @[RCU.scala:50:{23,31}]
      rf_reg_21 <= 64'h0;	// @[RCU.scala:50:{23,31}]
      rf_reg_22 <= 64'h0;	// @[RCU.scala:50:{23,31}]
      rf_reg_23 <= 64'h0;	// @[RCU.scala:50:{23,31}]
      rf_reg_24 <= 64'h0;	// @[RCU.scala:50:{23,31}]
      rf_reg_25 <= 64'h0;	// @[RCU.scala:50:{23,31}]
      rf_reg_26 <= 64'h0;	// @[RCU.scala:50:{23,31}]
      rf_reg_27 <= 64'h0;	// @[RCU.scala:50:{23,31}]
      rf_reg_28 <= 64'h0;	// @[RCU.scala:50:{23,31}]
      rf_reg_29 <= 64'h0;	// @[RCU.scala:50:{23,31}]
      rf_reg_30 <= 64'h0;	// @[RCU.scala:50:{23,31}]
    end
    else if (io_l2miss) begin
      rf_reg_0 <= io_rf_in_0;	// @[RCU.scala:50:23]
      rf_reg_1 <= io_rf_in_1;	// @[RCU.scala:50:23]
      rf_reg_2 <= io_rf_in_2;	// @[RCU.scala:50:23]
      rf_reg_3 <= io_rf_in_3;	// @[RCU.scala:50:23]
      rf_reg_4 <= io_rf_in_4;	// @[RCU.scala:50:23]
      rf_reg_5 <= io_rf_in_5;	// @[RCU.scala:50:23]
      rf_reg_6 <= io_rf_in_6;	// @[RCU.scala:50:23]
      rf_reg_7 <= io_rf_in_7;	// @[RCU.scala:50:23]
      rf_reg_8 <= io_rf_in_8;	// @[RCU.scala:50:23]
      rf_reg_9 <= io_rf_in_9;	// @[RCU.scala:50:23]
      rf_reg_10 <= io_rf_in_10;	// @[RCU.scala:50:23]
      rf_reg_11 <= io_rf_in_11;	// @[RCU.scala:50:23]
      rf_reg_12 <= io_rf_in_12;	// @[RCU.scala:50:23]
      rf_reg_13 <= io_rf_in_13;	// @[RCU.scala:50:23]
      rf_reg_14 <= io_rf_in_14;	// @[RCU.scala:50:23]
      rf_reg_15 <= io_rf_in_15;	// @[RCU.scala:50:23]
      rf_reg_16 <= io_rf_in_16;	// @[RCU.scala:50:23]
      rf_reg_17 <= io_rf_in_17;	// @[RCU.scala:50:23]
      rf_reg_18 <= io_rf_in_18;	// @[RCU.scala:50:23]
      rf_reg_19 <= io_rf_in_19;	// @[RCU.scala:50:23]
      rf_reg_20 <= io_rf_in_20;	// @[RCU.scala:50:23]
      rf_reg_21 <= io_rf_in_21;	// @[RCU.scala:50:23]
      rf_reg_22 <= io_rf_in_22;	// @[RCU.scala:50:23]
      rf_reg_23 <= io_rf_in_23;	// @[RCU.scala:50:23]
      rf_reg_24 <= io_rf_in_24;	// @[RCU.scala:50:23]
      rf_reg_25 <= io_rf_in_25;	// @[RCU.scala:50:23]
      rf_reg_26 <= io_rf_in_26;	// @[RCU.scala:50:23]
      rf_reg_27 <= io_rf_in_27;	// @[RCU.scala:50:23]
      rf_reg_28 <= io_rf_in_28;	// @[RCU.scala:50:23]
      rf_reg_29 <= io_rf_in_29;	// @[RCU.scala:50:23]
      rf_reg_30 <= io_rf_in_30;	// @[RCU.scala:50:23]
    end
  end // always @(posedge)
  `ifndef SYNTHESIS
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM_0;
    logic [31:0] _RANDOM_1;
    logic [31:0] _RANDOM_2;
    logic [31:0] _RANDOM_3;
    logic [31:0] _RANDOM_4;
    logic [31:0] _RANDOM_5;
    logic [31:0] _RANDOM_6;
    logic [31:0] _RANDOM_7;
    logic [31:0] _RANDOM_8;
    logic [31:0] _RANDOM_9;
    logic [31:0] _RANDOM_10;
    logic [31:0] _RANDOM_11;
    logic [31:0] _RANDOM_12;
    logic [31:0] _RANDOM_13;
    logic [31:0] _RANDOM_14;
    logic [31:0] _RANDOM_15;
    logic [31:0] _RANDOM_16;
    logic [31:0] _RANDOM_17;
    logic [31:0] _RANDOM_18;
    logic [31:0] _RANDOM_19;
    logic [31:0] _RANDOM_20;
    logic [31:0] _RANDOM_21;
    logic [31:0] _RANDOM_22;
    logic [31:0] _RANDOM_23;
    logic [31:0] _RANDOM_24;
    logic [31:0] _RANDOM_25;
    logic [31:0] _RANDOM_26;
    logic [31:0] _RANDOM_27;
    logic [31:0] _RANDOM_28;
    logic [31:0] _RANDOM_29;
    logic [31:0] _RANDOM_30;
    logic [31:0] _RANDOM_31;
    logic [31:0] _RANDOM_32;
    logic [31:0] _RANDOM_33;
    logic [31:0] _RANDOM_34;
    logic [31:0] _RANDOM_35;
    logic [31:0] _RANDOM_36;
    logic [31:0] _RANDOM_37;
    logic [31:0] _RANDOM_38;
    logic [31:0] _RANDOM_39;
    logic [31:0] _RANDOM_40;
    logic [31:0] _RANDOM_41;
    logic [31:0] _RANDOM_42;
    logic [31:0] _RANDOM_43;
    logic [31:0] _RANDOM_44;
    logic [31:0] _RANDOM_45;
    logic [31:0] _RANDOM_46;
    logic [31:0] _RANDOM_47;
    logic [31:0] _RANDOM_48;
    logic [31:0] _RANDOM_49;
    logic [31:0] _RANDOM_50;
    logic [31:0] _RANDOM_51;
    logic [31:0] _RANDOM_52;
    logic [31:0] _RANDOM_53;
    logic [31:0] _RANDOM_54;
    logic [31:0] _RANDOM_55;
    logic [31:0] _RANDOM_56;
    logic [31:0] _RANDOM_57;
    logic [31:0] _RANDOM_58;
    logic [31:0] _RANDOM_59;
    logic [31:0] _RANDOM_60;
    logic [31:0] _RANDOM_61;
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        _RANDOM_0 = `RANDOM;
        _RANDOM_1 = `RANDOM;
        _RANDOM_2 = `RANDOM;
        _RANDOM_3 = `RANDOM;
        _RANDOM_4 = `RANDOM;
        _RANDOM_5 = `RANDOM;
        _RANDOM_6 = `RANDOM;
        _RANDOM_7 = `RANDOM;
        _RANDOM_8 = `RANDOM;
        _RANDOM_9 = `RANDOM;
        _RANDOM_10 = `RANDOM;
        _RANDOM_11 = `RANDOM;
        _RANDOM_12 = `RANDOM;
        _RANDOM_13 = `RANDOM;
        _RANDOM_14 = `RANDOM;
        _RANDOM_15 = `RANDOM;
        _RANDOM_16 = `RANDOM;
        _RANDOM_17 = `RANDOM;
        _RANDOM_18 = `RANDOM;
        _RANDOM_19 = `RANDOM;
        _RANDOM_20 = `RANDOM;
        _RANDOM_21 = `RANDOM;
        _RANDOM_22 = `RANDOM;
        _RANDOM_23 = `RANDOM;
        _RANDOM_24 = `RANDOM;
        _RANDOM_25 = `RANDOM;
        _RANDOM_26 = `RANDOM;
        _RANDOM_27 = `RANDOM;
        _RANDOM_28 = `RANDOM;
        _RANDOM_29 = `RANDOM;
        _RANDOM_30 = `RANDOM;
        _RANDOM_31 = `RANDOM;
        _RANDOM_32 = `RANDOM;
        _RANDOM_33 = `RANDOM;
        _RANDOM_34 = `RANDOM;
        _RANDOM_35 = `RANDOM;
        _RANDOM_36 = `RANDOM;
        _RANDOM_37 = `RANDOM;
        _RANDOM_38 = `RANDOM;
        _RANDOM_39 = `RANDOM;
        _RANDOM_40 = `RANDOM;
        _RANDOM_41 = `RANDOM;
        _RANDOM_42 = `RANDOM;
        _RANDOM_43 = `RANDOM;
        _RANDOM_44 = `RANDOM;
        _RANDOM_45 = `RANDOM;
        _RANDOM_46 = `RANDOM;
        _RANDOM_47 = `RANDOM;
        _RANDOM_48 = `RANDOM;
        _RANDOM_49 = `RANDOM;
        _RANDOM_50 = `RANDOM;
        _RANDOM_51 = `RANDOM;
        _RANDOM_52 = `RANDOM;
        _RANDOM_53 = `RANDOM;
        _RANDOM_54 = `RANDOM;
        _RANDOM_55 = `RANDOM;
        _RANDOM_56 = `RANDOM;
        _RANDOM_57 = `RANDOM;
        _RANDOM_58 = `RANDOM;
        _RANDOM_59 = `RANDOM;
        _RANDOM_60 = `RANDOM;
        _RANDOM_61 = `RANDOM;
        rf_reg_0 = {_RANDOM_0, _RANDOM_1};	// @[RCU.scala:50:23]
        rf_reg_1 = {_RANDOM_2, _RANDOM_3};	// @[RCU.scala:50:23]
        rf_reg_2 = {_RANDOM_4, _RANDOM_5};	// @[RCU.scala:50:23]
        rf_reg_3 = {_RANDOM_6, _RANDOM_7};	// @[RCU.scala:50:23]
        rf_reg_4 = {_RANDOM_8, _RANDOM_9};	// @[RCU.scala:50:23]
        rf_reg_5 = {_RANDOM_10, _RANDOM_11};	// @[RCU.scala:50:23]
        rf_reg_6 = {_RANDOM_12, _RANDOM_13};	// @[RCU.scala:50:23]
        rf_reg_7 = {_RANDOM_14, _RANDOM_15};	// @[RCU.scala:50:23]
        rf_reg_8 = {_RANDOM_16, _RANDOM_17};	// @[RCU.scala:50:23]
        rf_reg_9 = {_RANDOM_18, _RANDOM_19};	// @[RCU.scala:50:23]
        rf_reg_10 = {_RANDOM_20, _RANDOM_21};	// @[RCU.scala:50:23]
        rf_reg_11 = {_RANDOM_22, _RANDOM_23};	// @[RCU.scala:50:23]
        rf_reg_12 = {_RANDOM_24, _RANDOM_25};	// @[RCU.scala:50:23]
        rf_reg_13 = {_RANDOM_26, _RANDOM_27};	// @[RCU.scala:50:23]
        rf_reg_14 = {_RANDOM_28, _RANDOM_29};	// @[RCU.scala:50:23]
        rf_reg_15 = {_RANDOM_30, _RANDOM_31};	// @[RCU.scala:50:23]
        rf_reg_16 = {_RANDOM_32, _RANDOM_33};	// @[RCU.scala:50:23]
        rf_reg_17 = {_RANDOM_34, _RANDOM_35};	// @[RCU.scala:50:23]
        rf_reg_18 = {_RANDOM_36, _RANDOM_37};	// @[RCU.scala:50:23]
        rf_reg_19 = {_RANDOM_38, _RANDOM_39};	// @[RCU.scala:50:23]
        rf_reg_20 = {_RANDOM_40, _RANDOM_41};	// @[RCU.scala:50:23]
        rf_reg_21 = {_RANDOM_42, _RANDOM_43};	// @[RCU.scala:50:23]
        rf_reg_22 = {_RANDOM_44, _RANDOM_45};	// @[RCU.scala:50:23]
        rf_reg_23 = {_RANDOM_46, _RANDOM_47};	// @[RCU.scala:50:23]
        rf_reg_24 = {_RANDOM_48, _RANDOM_49};	// @[RCU.scala:50:23]
        rf_reg_25 = {_RANDOM_50, _RANDOM_51};	// @[RCU.scala:50:23]
        rf_reg_26 = {_RANDOM_52, _RANDOM_53};	// @[RCU.scala:50:23]
        rf_reg_27 = {_RANDOM_54, _RANDOM_55};	// @[RCU.scala:50:23]
        rf_reg_28 = {_RANDOM_56, _RANDOM_57};	// @[RCU.scala:50:23]
        rf_reg_29 = {_RANDOM_58, _RANDOM_59};	// @[RCU.scala:50:23]
        rf_reg_30 = {_RANDOM_60, _RANDOM_61};	// @[RCU.scala:50:23]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  assign io_rf_out_0 = io_wb_valid ? rf_reg_0 : 64'h0;	// @[RCU.scala:50:{23,31}, :55:18, :103:21, :106:20]
  assign io_rf_out_1 = io_wb_valid ? rf_reg_1 : 64'h0;	// @[RCU.scala:50:{23,31}, :55:18, :103:21, :106:20]
  assign io_rf_out_2 = io_wb_valid ? rf_reg_2 : 64'h0;	// @[RCU.scala:50:{23,31}, :55:18, :103:21, :106:20]
  assign io_rf_out_3 = io_wb_valid ? rf_reg_3 : 64'h0;	// @[RCU.scala:50:{23,31}, :55:18, :103:21, :106:20]
  assign io_rf_out_4 = io_wb_valid ? rf_reg_4 : 64'h0;	// @[RCU.scala:50:{23,31}, :55:18, :103:21, :106:20]
  assign io_rf_out_5 = io_wb_valid ? rf_reg_5 : 64'h0;	// @[RCU.scala:50:{23,31}, :55:18, :103:21, :106:20]
  assign io_rf_out_6 = io_wb_valid ? rf_reg_6 : 64'h0;	// @[RCU.scala:50:{23,31}, :55:18, :103:21, :106:20]
  assign io_rf_out_7 = io_wb_valid ? rf_reg_7 : 64'h0;	// @[RCU.scala:50:{23,31}, :55:18, :103:21, :106:20]
  assign io_rf_out_8 = io_wb_valid ? rf_reg_8 : 64'h0;	// @[RCU.scala:50:{23,31}, :55:18, :103:21, :106:20]
  assign io_rf_out_9 = io_wb_valid ? rf_reg_9 : 64'h0;	// @[RCU.scala:50:{23,31}, :55:18, :103:21, :106:20]
  assign io_rf_out_10 = io_wb_valid ? rf_reg_10 : 64'h0;	// @[RCU.scala:50:{23,31}, :55:18, :103:21, :106:20]
  assign io_rf_out_11 = io_wb_valid ? rf_reg_11 : 64'h0;	// @[RCU.scala:50:{23,31}, :55:18, :103:21, :106:20]
  assign io_rf_out_12 = io_wb_valid ? rf_reg_12 : 64'h0;	// @[RCU.scala:50:{23,31}, :55:18, :103:21, :106:20]
  assign io_rf_out_13 = io_wb_valid ? rf_reg_13 : 64'h0;	// @[RCU.scala:50:{23,31}, :55:18, :103:21, :106:20]
  assign io_rf_out_14 = io_wb_valid ? rf_reg_14 : 64'h0;	// @[RCU.scala:50:{23,31}, :55:18, :103:21, :106:20]
  assign io_rf_out_15 = io_wb_valid ? rf_reg_15 : 64'h0;	// @[RCU.scala:50:{23,31}, :55:18, :103:21, :106:20]
  assign io_rf_out_16 = io_wb_valid ? rf_reg_16 : 64'h0;	// @[RCU.scala:50:{23,31}, :55:18, :103:21, :106:20]
  assign io_rf_out_17 = io_wb_valid ? rf_reg_17 : 64'h0;	// @[RCU.scala:50:{23,31}, :55:18, :103:21, :106:20]
  assign io_rf_out_18 = io_wb_valid ? rf_reg_18 : 64'h0;	// @[RCU.scala:50:{23,31}, :55:18, :103:21, :106:20]
  assign io_rf_out_19 = io_wb_valid ? rf_reg_19 : 64'h0;	// @[RCU.scala:50:{23,31}, :55:18, :103:21, :106:20]
  assign io_rf_out_20 = io_wb_valid ? rf_reg_20 : 64'h0;	// @[RCU.scala:50:{23,31}, :55:18, :103:21, :106:20]
  assign io_rf_out_21 = io_wb_valid ? rf_reg_21 : 64'h0;	// @[RCU.scala:50:{23,31}, :55:18, :103:21, :106:20]
  assign io_rf_out_22 = io_wb_valid ? rf_reg_22 : 64'h0;	// @[RCU.scala:50:{23,31}, :55:18, :103:21, :106:20]
  assign io_rf_out_23 = io_wb_valid ? rf_reg_23 : 64'h0;	// @[RCU.scala:50:{23,31}, :55:18, :103:21, :106:20]
  assign io_rf_out_24 = io_wb_valid ? rf_reg_24 : 64'h0;	// @[RCU.scala:50:{23,31}, :55:18, :103:21, :106:20]
  assign io_rf_out_25 = io_wb_valid ? rf_reg_25 : 64'h0;	// @[RCU.scala:50:{23,31}, :55:18, :103:21, :106:20]
  assign io_rf_out_26 = io_wb_valid ? rf_reg_26 : 64'h0;	// @[RCU.scala:50:{23,31}, :55:18, :103:21, :106:20]
  assign io_rf_out_27 = io_wb_valid ? rf_reg_27 : 64'h0;	// @[RCU.scala:50:{23,31}, :55:18, :103:21, :106:20]
  assign io_rf_out_28 = io_wb_valid ? rf_reg_28 : 64'h0;	// @[RCU.scala:50:{23,31}, :55:18, :103:21, :106:20]
  assign io_rf_out_29 = io_wb_valid ? rf_reg_29 : 64'h0;	// @[RCU.scala:50:{23,31}, :55:18, :103:21, :106:20]
  assign io_rf_out_30 = io_wb_valid ? rf_reg_30 : 64'h0;	// @[RCU.scala:50:{23,31}, :55:18, :103:21, :106:20]
  assign io_runahead_backflag = io_wb_valid;
  assign io_runahead_trig = io_l2miss;
endmodule

