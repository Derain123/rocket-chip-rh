// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// VCS coverage exclude_file
module rf_combMem(	// @[RocketCore.scala:1265:15]
  input  [4:0]  R0_addr,
  input         R0_en,
                R0_clk,
  input  [4:0]  R1_addr,
  input         R1_en,
                R1_clk,
  input  [4:0]  R2_addr,
  input         R2_en,
                R2_clk,
  input  [4:0]  R3_addr,
  input         R3_en,
                R3_clk,
  input  [4:0]  R4_addr,
  input         R4_en,
                R4_clk,
  input  [4:0]  R5_addr,
  input         R5_en,
                R5_clk,
  input  [4:0]  R6_addr,
  input         R6_en,
                R6_clk,
  input  [4:0]  R7_addr,
  input         R7_en,
                R7_clk,
  input  [4:0]  R8_addr,
  input         R8_en,
                R8_clk,
  input  [4:0]  R9_addr,
  input         R9_en,
                R9_clk,
  input  [4:0]  R10_addr,
  input         R10_en,
                R10_clk,
  input  [4:0]  R11_addr,
  input         R11_en,
                R11_clk,
  input  [4:0]  R12_addr,
  input         R12_en,
                R12_clk,
  input  [4:0]  R13_addr,
  input         R13_en,
                R13_clk,
  input  [4:0]  R14_addr,
  input         R14_en,
                R14_clk,
  input  [4:0]  R15_addr,
  input         R15_en,
                R15_clk,
  input  [4:0]  R16_addr,
  input         R16_en,
                R16_clk,
  input  [4:0]  R17_addr,
  input         R17_en,
                R17_clk,
  input  [4:0]  R18_addr,
  input         R18_en,
                R18_clk,
  input  [4:0]  R19_addr,
  input         R19_en,
                R19_clk,
  input  [4:0]  R20_addr,
  input         R20_en,
                R20_clk,
  input  [4:0]  R21_addr,
  input         R21_en,
                R21_clk,
  input  [4:0]  R22_addr,
  input         R22_en,
                R22_clk,
  input  [4:0]  R23_addr,
  input         R23_en,
                R23_clk,
  input  [4:0]  R24_addr,
  input         R24_en,
                R24_clk,
  input  [4:0]  R25_addr,
  input         R25_en,
                R25_clk,
  input  [4:0]  R26_addr,
  input         R26_en,
                R26_clk,
  input  [4:0]  R27_addr,
  input         R27_en,
                R27_clk,
  input  [4:0]  R28_addr,
  input         R28_en,
                R28_clk,
  input  [4:0]  R29_addr,
  input         R29_en,
                R29_clk,
  input  [4:0]  R30_addr,
  input         R30_en,
                R30_clk,
  input  [4:0]  R31_addr,
  input         R31_en,
                R31_clk,
  input  [4:0]  R32_addr,
  input         R32_en,
                R32_clk,
  input  [4:0]  W0_addr,
  input         W0_en,
                W0_clk,
  input  [63:0] W0_data,
  input  [4:0]  W1_addr,
  input         W1_en,
                W1_clk,
  input  [63:0] W1_data,
  input  [4:0]  W2_addr,
  input         W2_en,
                W2_clk,
  input  [63:0] W2_data,
  input  [4:0]  W3_addr,
  input         W3_en,
                W3_clk,
  input  [63:0] W3_data,
  input  [4:0]  W4_addr,
  input         W4_en,
                W4_clk,
  input  [63:0] W4_data,
  input  [4:0]  W5_addr,
  input         W5_en,
                W5_clk,
  input  [63:0] W5_data,
  input  [4:0]  W6_addr,
  input         W6_en,
                W6_clk,
  input  [63:0] W6_data,
  input  [4:0]  W7_addr,
  input         W7_en,
                W7_clk,
  input  [63:0] W7_data,
  input  [4:0]  W8_addr,
  input         W8_en,
                W8_clk,
  input  [63:0] W8_data,
  input  [4:0]  W9_addr,
  input         W9_en,
                W9_clk,
  input  [63:0] W9_data,
  input  [4:0]  W10_addr,
  input         W10_en,
                W10_clk,
  input  [63:0] W10_data,
  input  [4:0]  W11_addr,
  input         W11_en,
                W11_clk,
  input  [63:0] W11_data,
  input  [4:0]  W12_addr,
  input         W12_en,
                W12_clk,
  input  [63:0] W12_data,
  input  [4:0]  W13_addr,
  input         W13_en,
                W13_clk,
  input  [63:0] W13_data,
  input  [4:0]  W14_addr,
  input         W14_en,
                W14_clk,
  input  [63:0] W14_data,
  input  [4:0]  W15_addr,
  input         W15_en,
                W15_clk,
  input  [63:0] W15_data,
  input  [4:0]  W16_addr,
  input         W16_en,
                W16_clk,
  input  [63:0] W16_data,
  input  [4:0]  W17_addr,
  input         W17_en,
                W17_clk,
  input  [63:0] W17_data,
  input  [4:0]  W18_addr,
  input         W18_en,
                W18_clk,
  input  [63:0] W18_data,
  input  [4:0]  W19_addr,
  input         W19_en,
                W19_clk,
  input  [63:0] W19_data,
  input  [4:0]  W20_addr,
  input         W20_en,
                W20_clk,
  input  [63:0] W20_data,
  input  [4:0]  W21_addr,
  input         W21_en,
                W21_clk,
  input  [63:0] W21_data,
  input  [4:0]  W22_addr,
  input         W22_en,
                W22_clk,
  input  [63:0] W22_data,
  input  [4:0]  W23_addr,
  input         W23_en,
                W23_clk,
  input  [63:0] W23_data,
  input  [4:0]  W24_addr,
  input         W24_en,
                W24_clk,
  input  [63:0] W24_data,
  input  [4:0]  W25_addr,
  input         W25_en,
                W25_clk,
  input  [63:0] W25_data,
  input  [4:0]  W26_addr,
  input         W26_en,
                W26_clk,
  input  [63:0] W26_data,
  input  [4:0]  W27_addr,
  input         W27_en,
                W27_clk,
  input  [63:0] W27_data,
  input  [4:0]  W28_addr,
  input         W28_en,
                W28_clk,
  input  [63:0] W28_data,
  input  [4:0]  W29_addr,
  input         W29_en,
                W29_clk,
  input  [63:0] W29_data,
  input  [4:0]  W30_addr,
  input         W30_en,
                W30_clk,
  input  [63:0] W30_data,
  output [63:0] R0_data,
                R1_data,
                R2_data,
                R3_data,
                R4_data,
                R5_data,
                R6_data,
                R7_data,
                R8_data,
                R9_data,
                R10_data,
                R11_data,
                R12_data,
                R13_data,
                R14_data,
                R15_data,
                R16_data,
                R17_data,
                R18_data,
                R19_data,
                R20_data,
                R21_data,
                R22_data,
                R23_data,
                R24_data,
                R25_data,
                R26_data,
                R27_data,
                R28_data,
                R29_data,
                R30_data,
                R31_data,
                R32_data
);

  reg [63:0] Memory[0:30];	// @[RocketCore.scala:1265:15]
  always @(posedge W0_clk) begin	// @[RocketCore.scala:1265:15]
    if (W0_en)	// @[RocketCore.scala:1265:15]
      Memory[W0_addr] <= W0_data;	// @[RocketCore.scala:1265:15]
    if (W1_en)	// @[RocketCore.scala:1265:15]
      Memory[W1_addr] <= W1_data;	// @[RocketCore.scala:1265:15]
    if (W2_en)	// @[RocketCore.scala:1265:15]
      Memory[W2_addr] <= W2_data;	// @[RocketCore.scala:1265:15]
    if (W3_en)	// @[RocketCore.scala:1265:15]
      Memory[W3_addr] <= W3_data;	// @[RocketCore.scala:1265:15]
    if (W4_en)	// @[RocketCore.scala:1265:15]
      Memory[W4_addr] <= W4_data;	// @[RocketCore.scala:1265:15]
    if (W5_en)	// @[RocketCore.scala:1265:15]
      Memory[W5_addr] <= W5_data;	// @[RocketCore.scala:1265:15]
    if (W6_en)	// @[RocketCore.scala:1265:15]
      Memory[W6_addr] <= W6_data;	// @[RocketCore.scala:1265:15]
    if (W7_en)	// @[RocketCore.scala:1265:15]
      Memory[W7_addr] <= W7_data;	// @[RocketCore.scala:1265:15]
    if (W8_en)	// @[RocketCore.scala:1265:15]
      Memory[W8_addr] <= W8_data;	// @[RocketCore.scala:1265:15]
    if (W9_en)	// @[RocketCore.scala:1265:15]
      Memory[W9_addr] <= W9_data;	// @[RocketCore.scala:1265:15]
    if (W10_en)	// @[RocketCore.scala:1265:15]
      Memory[W10_addr] <= W10_data;	// @[RocketCore.scala:1265:15]
    if (W11_en)	// @[RocketCore.scala:1265:15]
      Memory[W11_addr] <= W11_data;	// @[RocketCore.scala:1265:15]
    if (W12_en)	// @[RocketCore.scala:1265:15]
      Memory[W12_addr] <= W12_data;	// @[RocketCore.scala:1265:15]
    if (W13_en)	// @[RocketCore.scala:1265:15]
      Memory[W13_addr] <= W13_data;	// @[RocketCore.scala:1265:15]
    if (W14_en)	// @[RocketCore.scala:1265:15]
      Memory[W14_addr] <= W14_data;	// @[RocketCore.scala:1265:15]
    if (W15_en)	// @[RocketCore.scala:1265:15]
      Memory[W15_addr] <= W15_data;	// @[RocketCore.scala:1265:15]
    if (W16_en)	// @[RocketCore.scala:1265:15]
      Memory[W16_addr] <= W16_data;	// @[RocketCore.scala:1265:15]
    if (W17_en)	// @[RocketCore.scala:1265:15]
      Memory[W17_addr] <= W17_data;	// @[RocketCore.scala:1265:15]
    if (W18_en)	// @[RocketCore.scala:1265:15]
      Memory[W18_addr] <= W18_data;	// @[RocketCore.scala:1265:15]
    if (W19_en)	// @[RocketCore.scala:1265:15]
      Memory[W19_addr] <= W19_data;	// @[RocketCore.scala:1265:15]
    if (W20_en)	// @[RocketCore.scala:1265:15]
      Memory[W20_addr] <= W20_data;	// @[RocketCore.scala:1265:15]
    if (W21_en)	// @[RocketCore.scala:1265:15]
      Memory[W21_addr] <= W21_data;	// @[RocketCore.scala:1265:15]
    if (W22_en)	// @[RocketCore.scala:1265:15]
      Memory[W22_addr] <= W22_data;	// @[RocketCore.scala:1265:15]
    if (W23_en)	// @[RocketCore.scala:1265:15]
      Memory[W23_addr] <= W23_data;	// @[RocketCore.scala:1265:15]
    if (W24_en)	// @[RocketCore.scala:1265:15]
      Memory[W24_addr] <= W24_data;	// @[RocketCore.scala:1265:15]
    if (W25_en)	// @[RocketCore.scala:1265:15]
      Memory[W25_addr] <= W25_data;	// @[RocketCore.scala:1265:15]
    if (W26_en)	// @[RocketCore.scala:1265:15]
      Memory[W26_addr] <= W26_data;	// @[RocketCore.scala:1265:15]
    if (W27_en)	// @[RocketCore.scala:1265:15]
      Memory[W27_addr] <= W27_data;	// @[RocketCore.scala:1265:15]
    if (W28_en)	// @[RocketCore.scala:1265:15]
      Memory[W28_addr] <= W28_data;	// @[RocketCore.scala:1265:15]
    if (W29_en)	// @[RocketCore.scala:1265:15]
      Memory[W29_addr] <= W29_data;	// @[RocketCore.scala:1265:15]
    if (W30_en)	// @[RocketCore.scala:1265:15]
      Memory[W30_addr] <= W30_data;	// @[RocketCore.scala:1265:15]
  end // always @(posedge)
  `ifndef SYNTHESIS	// @[RocketCore.scala:1265:15]
    `ifdef RANDOMIZE_MEM_INIT	// @[RocketCore.scala:1265:15]
      integer initvar;	// @[RocketCore.scala:1265:15]
      reg [63:0] _RANDOM_MEM;	// @[RocketCore.scala:1265:15]
    `endif // RANDOMIZE_MEM_INIT
    initial begin	// @[RocketCore.scala:1265:15]
      `INIT_RANDOM_PROLOG_	// @[RocketCore.scala:1265:15]
      `ifdef RANDOMIZE_MEM_INIT	// @[RocketCore.scala:1265:15]
        for (initvar = 0; initvar < 31; initvar = initvar + 1) begin
          _RANDOM_MEM = {{`RANDOM}, {`RANDOM}};
          Memory[initvar] = _RANDOM_MEM[63:0];
        end	// @[RocketCore.scala:1265:15]
      `endif // RANDOMIZE_MEM_INIT
    end // initial
  `endif // not def SYNTHESIS
  assign R0_data = R0_en ? Memory[R0_addr] : 64'bx;	// @[RocketCore.scala:1265:15]
  assign R1_data = R1_en ? Memory[R1_addr] : 64'bx;	// @[RocketCore.scala:1265:15]
  assign R2_data = R2_en ? Memory[R2_addr] : 64'bx;	// @[RocketCore.scala:1265:15]
  assign R3_data = R3_en ? Memory[R3_addr] : 64'bx;	// @[RocketCore.scala:1265:15]
  assign R4_data = R4_en ? Memory[R4_addr] : 64'bx;	// @[RocketCore.scala:1265:15]
  assign R5_data = R5_en ? Memory[R5_addr] : 64'bx;	// @[RocketCore.scala:1265:15]
  assign R6_data = R6_en ? Memory[R6_addr] : 64'bx;	// @[RocketCore.scala:1265:15]
  assign R7_data = R7_en ? Memory[R7_addr] : 64'bx;	// @[RocketCore.scala:1265:15]
  assign R8_data = R8_en ? Memory[R8_addr] : 64'bx;	// @[RocketCore.scala:1265:15]
  assign R9_data = R9_en ? Memory[R9_addr] : 64'bx;	// @[RocketCore.scala:1265:15]
  assign R10_data = R10_en ? Memory[R10_addr] : 64'bx;	// @[RocketCore.scala:1265:15]
  assign R11_data = R11_en ? Memory[R11_addr] : 64'bx;	// @[RocketCore.scala:1265:15]
  assign R12_data = R12_en ? Memory[R12_addr] : 64'bx;	// @[RocketCore.scala:1265:15]
  assign R13_data = R13_en ? Memory[R13_addr] : 64'bx;	// @[RocketCore.scala:1265:15]
  assign R14_data = R14_en ? Memory[R14_addr] : 64'bx;	// @[RocketCore.scala:1265:15]
  assign R15_data = R15_en ? Memory[R15_addr] : 64'bx;	// @[RocketCore.scala:1265:15]
  assign R16_data = R16_en ? Memory[R16_addr] : 64'bx;	// @[RocketCore.scala:1265:15]
  assign R17_data = R17_en ? Memory[R17_addr] : 64'bx;	// @[RocketCore.scala:1265:15]
  assign R18_data = R18_en ? Memory[R18_addr] : 64'bx;	// @[RocketCore.scala:1265:15]
  assign R19_data = R19_en ? Memory[R19_addr] : 64'bx;	// @[RocketCore.scala:1265:15]
  assign R20_data = R20_en ? Memory[R20_addr] : 64'bx;	// @[RocketCore.scala:1265:15]
  assign R21_data = R21_en ? Memory[R21_addr] : 64'bx;	// @[RocketCore.scala:1265:15]
  assign R22_data = R22_en ? Memory[R22_addr] : 64'bx;	// @[RocketCore.scala:1265:15]
  assign R23_data = R23_en ? Memory[R23_addr] : 64'bx;	// @[RocketCore.scala:1265:15]
  assign R24_data = R24_en ? Memory[R24_addr] : 64'bx;	// @[RocketCore.scala:1265:15]
  assign R25_data = R25_en ? Memory[R25_addr] : 64'bx;	// @[RocketCore.scala:1265:15]
  assign R26_data = R26_en ? Memory[R26_addr] : 64'bx;	// @[RocketCore.scala:1265:15]
  assign R27_data = R27_en ? Memory[R27_addr] : 64'bx;	// @[RocketCore.scala:1265:15]
  assign R28_data = R28_en ? Memory[R28_addr] : 64'bx;	// @[RocketCore.scala:1265:15]
  assign R29_data = R29_en ? Memory[R29_addr] : 64'bx;	// @[RocketCore.scala:1265:15]
  assign R30_data = R30_en ? Memory[R30_addr] : 64'bx;	// @[RocketCore.scala:1265:15]
  assign R31_data = R31_en ? Memory[R31_addr] : 64'bx;	// @[RocketCore.scala:1265:15]
  assign R32_data = R32_en ? Memory[R32_addr] : 64'bx;	// @[RocketCore.scala:1265:15]
endmodule

